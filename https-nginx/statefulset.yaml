apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-nginx

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-nginx-runner
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-nginx-role
subjects:
  - kind: ServiceAccount
    name: service-nginx
    namespace: default
roleRef:
  kind: ClusterRole
  name: service-nginx-runner
  apiGroup: rbac.authorization.k8s.io

---

kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: service-nginx
spec:
  serviceName: "service-nginx"
  replicas: 1
  template:
    metadata:
      labels:
        app: service-nginx
    spec:
      serviceAccount: service-nginx
      containers:
        - name: service-nginx
          image: xiangxinyong/nginxphphttps:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443
              protocol: TCP

---
kind: Service
apiVersion: v1
metadata:
  name: service-nginx
  labels:
    app: service-nginx
spec:
  selector:
    app: service-nginx
  ports:
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP

